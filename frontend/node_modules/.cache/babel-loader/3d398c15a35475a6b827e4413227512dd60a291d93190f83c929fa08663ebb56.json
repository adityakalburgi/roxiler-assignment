{"ast":null,"code":"var _jsxFileName = \"D:\\\\code files\\\\aditya_gfg\\\\frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport Transactions from './Transactions';\nimport Statistics from './Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pieColors = [];\nlet barColors = [];\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      showStats: false,\n      month: \"01\",\n      barChartData: {},\n      pieChartData: {},\n      stats: {}\n    };\n  }\n  componentDidMount() {\n    fetch(`${window.location.href}initDB`);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: !this.state.showStats ? /*#__PURE__*/_jsxDEV(Transactions, {\n          month: this.state.month,\n          passMonth: value => {\n            fetch(`${window.location.href}combinedData?month=${value}`).then(response => response.json()).then(Data => {\n              if (Data[2].length) {\n                if (pieColors.length !== Data[2].length) {\n                  pieColors = Data[2].map(data => `#${parseInt(Math.random() * 1000)}`);\n                }\n                if (barColors.length !== Data[1].length) {\n                  barColors = Data[1].map(data => `#${parseInt(Math.random() * 1000)}`);\n                }\n                this.setState({\n                  showStats: this.state.showStats,\n                  month: value,\n                  barChartData: {\n                    labels: Data[1].map(data => data.range),\n                    datasets: [{\n                      label: \"Product Count\",\n                      data: Data[1].map(data => data.count),\n                      backgroundColor: barColors,\n                      borderColor: \"black\",\n                      borderWidth: 1\n                    }]\n                  },\n                  pieChartData: {\n                    labels: Data[2].map(data => data.category),\n                    datasets: [{\n                      label: \"Product Count\",\n                      data: Data[2].map(data => data.count),\n                      backgroundColor: pieColors,\n                      borderColor: \"black\",\n                      borderWidth: 1\n                    }]\n                  },\n                  stats: Data[0][0]\n                });\n              }\n            }).catch(console.log);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n          month: this.state.month,\n          barChartData: this.state.barChartData,\n          pieChartData: this.state.pieChartData,\n          stats: this.state.stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"App-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: this.state.showStats ? \"#7df604\" : \"#4f9906\"\n            },\n            onClick: () => {\n              this.setState({\n                showStats: false,\n                month: this.state.month,\n                chartData: this.state.chartData\n              });\n            },\n            children: \"Show Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: !this.state.showStats ? \"#7df604\" : \"#4f9906\"\n            },\n            onClick: () => {\n              this.setState({\n                showStats: true\n              });\n            },\n            children: \"Show Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Transactions","Statistics","jsxDEV","_jsxDEV","pieColors","barColors","App","Component","constructor","props","state","showStats","month","barChartData","pieChartData","stats","componentDidMount","fetch","window","location","href","render","className","children","passMonth","value","then","response","json","Data","length","map","data","parseInt","Math","random","setState","labels","range","datasets","label","count","backgroundColor","borderColor","borderWidth","category","catch","console","log","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","chartData"],"sources":["D:/code files/aditya_gfg/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Transactions from './Transactions';\nimport Statistics from './Statistics';\n\nlet pieColors = [];\nlet barColors = [];\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.props = props;\n    this.state = {\n      showStats : false,\n      month : \"01\",\n      barChartData : {\n\n      },\n      pieChartData : {\n\n      },\n      stats : {\n\n      }\n    }\n  }\n  \n  componentDidMount(){\n    fetch(`${window.location.href}initDB`)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            (!this.state.showStats)? <Transactions month = {this.state.month} passMonth = {(value)=> {\n              fetch(`${window.location.href}combinedData?month=${value}`)\n              .then((response)=>response.json())\n              .then((Data)=>{\n                  if(Data[2].length){\n\n                    if(pieColors.length !== Data[2].length){\n                      pieColors = Data[2].map(data => `#${parseInt(Math.random()*1000)}`)\n                    }\n                    if(barColors.length !== Data[1].length){\n                      barColors = Data[1].map(data => `#${parseInt(Math.random()*1000)}`)\n                    }\n\n                      this.setState({\n                        showStats:this.state.showStats,\n                        month:value,\n                        barChartData : {\n                          labels: Data[1].map(data => data.range), \n                          datasets: [\n                                {\n                                  label: \"Product Count\",\n                                  data: Data[1].map(data => data.count),\n                                  backgroundColor: barColors,\n                                  borderColor: \"black\",\n                                  borderWidth: 1\n                                }\n                              ]\n                        },\n                        pieChartData : {\n                          labels: Data[2].map(data => data.category), \n                          datasets: [\n                                {\n                                  label: \"Product Count\",\n                                  data: Data[2].map(data => data.count),\n                                  backgroundColor: pieColors,\n                                  borderColor: \"black\",\n                                  borderWidth: 1\n                                }\n                              ]\n                      },\n                      stats : Data[0][0]\n                      })\n                  }\n              })\n              .catch(console.log)\n                    \n            \n            }}/>:<Statistics month = {this.state.month} barChartData = {this.state.barChartData} pieChartData = {this.state.pieChartData} stats = {this.state.stats}/>\n\n          }\n        </header>\n        <footer className='App-footer'>\n          <div className=\"Btn-group\">\n            <button style={{backgroundColor:(this.state.showStats)?\"#7df604\":\"#4f9906\"}} onClick={()=>{\n              this.setState({showStats : false, month : this.state.month, chartData : this.state.chartData});\n            }}>Show Transactions</button>\n            <button style={{backgroundColor:(!this.state.showStats)?\"#7df604\":\"#4f9906\"}} onClick={()=>{\n              this.setState({showStats : true});\n            }}>Show Statistics</button>\n          </div>\n        </footer>\n      </div>\n    );   \n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}